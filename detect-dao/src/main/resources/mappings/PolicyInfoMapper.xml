<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.zstu.dao.PolicyInfoMapper" >
  <resultMap id="BaseResultMap" type="edu.zstu.domain.PolicyInfo" >
    <id column="PolicyId" property="policyId" jdbcType="INTEGER" />
    <result column="DeviceId" property="deviceId" jdbcType="INTEGER" />
    <result column="TaskId" property="taskId" jdbcType="INTEGER" />
    <result column="PolicyType" property="policyType" jdbcType="TINYINT" />
    <result column="DetectNum" property="detectNum" jdbcType="INTEGER" />
    <result column="DetectStartTime" property="detectStartTime" jdbcType="INTEGER" />
    <result column="CurDetectStartTime" property="curDetectStartTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    PolicyId, DeviceId, TaskId, PolicyType, DetectNum, DetectStartTime, CurDetectStartTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from policyinfo
    where PolicyId = #{policyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from policyinfo
    where PolicyId = #{policyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.zstu.domain.PolicyInfo" >
    insert into policyinfo (PolicyId, DeviceId, TaskId, 
      PolicyType, DetectNum, DetectStartTime, 
      CurDetectStartTime)
    values (#{policyId,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{policyType,jdbcType=TINYINT}, #{detectNum,jdbcType=INTEGER}, #{detectStartTime,jdbcType=INTEGER}, 
      #{curDetectStartTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.zstu.domain.PolicyInfo" >
    insert into policyinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="policyId != null" >
        PolicyId,
      </if>
      <if test="deviceId != null" >
        DeviceId,
      </if>
      <if test="taskId != null" >
        TaskId,
      </if>
      <if test="policyType != null" >
        PolicyType,
      </if>
      <if test="detectNum != null" >
        DetectNum,
      </if>
      <if test="detectStartTime != null" >
        DetectStartTime,
      </if>
      <if test="curDetectStartTime != null" >
        CurDetectStartTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="policyId != null" >
        #{policyId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="policyType != null" >
        #{policyType,jdbcType=TINYINT},
      </if>
      <if test="detectNum != null" >
        #{detectNum,jdbcType=INTEGER},
      </if>
      <if test="detectStartTime != null" >
        #{detectStartTime,jdbcType=INTEGER},
      </if>
      <if test="curDetectStartTime != null" >
        #{curDetectStartTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zstu.domain.PolicyInfo" >
    update policyinfo
    <set >
      <if test="deviceId != null" >
        DeviceId = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        TaskId = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="policyType != null" >
        PolicyType = #{policyType,jdbcType=TINYINT},
      </if>
      <if test="detectNum != null" >
        DetectNum = #{detectNum,jdbcType=INTEGER},
      </if>
      <if test="detectStartTime != null" >
        DetectStartTime = #{detectStartTime,jdbcType=INTEGER},
      </if>
      <if test="curDetectStartTime != null" >
        CurDetectStartTime = #{curDetectStartTime,jdbcType=INTEGER},
      </if>
    </set>
    where PolicyId = #{policyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zstu.domain.PolicyInfo" >
    update policyinfo
    set DeviceId = #{deviceId,jdbcType=INTEGER},
      TaskId = #{taskId,jdbcType=INTEGER},
      PolicyType = #{policyType,jdbcType=TINYINT},
      DetectNum = #{detectNum,jdbcType=INTEGER},
      DetectStartTime = #{detectStartTime,jdbcType=INTEGER},
      CurDetectStartTime = #{curDetectStartTime,jdbcType=INTEGER}
    where PolicyId = #{policyId,jdbcType=INTEGER}
  </update>
</mapper>