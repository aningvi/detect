<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.zstu.dao.NormalDetectInfoMapper" >
  <resultMap id="BaseResultMap" type="edu.zstu.domain.NormalDetectInfo" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="NormalDetectRollCode" property="normalDetectRollCode" jdbcType="INTEGER" />
    <result column="NormalCurDetectIP" property="normalCurDetectIP" jdbcType="INTEGER" />
    <result column="NormalDetectStartTime" property="normalDetectStartTime" jdbcType="INTEGER" />
    <result column="LastNormalDetectTotalTime" property="lastNormalDetectTotalTime" jdbcType="INTEGER" />
    <result column="NormalProbRate" property="normalProbRate" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, NormalDetectRollCode, NormalCurDetectIP, NormalDetectStartTime, LastNormalDetectTotalTime, 
    NormalProbRate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from normaldetectinfo
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from normaldetectinfo
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.zstu.domain.NormalDetectInfo" >
    insert into normaldetectinfo (Id, NormalDetectRollCode, NormalCurDetectIP, 
      NormalDetectStartTime, LastNormalDetectTotalTime, 
      NormalProbRate)
    values (#{id,jdbcType=INTEGER}, #{normalDetectRollCode,jdbcType=INTEGER}, #{normalCurDetectIP,jdbcType=INTEGER}, 
      #{normalDetectStartTime,jdbcType=INTEGER}, #{lastNormalDetectTotalTime,jdbcType=INTEGER}, 
      #{normalProbRate,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.zstu.domain.NormalDetectInfo" >
    insert into normaldetectinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="normalDetectRollCode != null" >
        NormalDetectRollCode,
      </if>
      <if test="normalCurDetectIP != null" >
        NormalCurDetectIP,
      </if>
      <if test="normalDetectStartTime != null" >
        NormalDetectStartTime,
      </if>
      <if test="lastNormalDetectTotalTime != null" >
        LastNormalDetectTotalTime,
      </if>
      <if test="normalProbRate != null" >
        NormalProbRate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="normalDetectRollCode != null" >
        #{normalDetectRollCode,jdbcType=INTEGER},
      </if>
      <if test="normalCurDetectIP != null" >
        #{normalCurDetectIP,jdbcType=INTEGER},
      </if>
      <if test="normalDetectStartTime != null" >
        #{normalDetectStartTime,jdbcType=INTEGER},
      </if>
      <if test="lastNormalDetectTotalTime != null" >
        #{lastNormalDetectTotalTime,jdbcType=INTEGER},
      </if>
      <if test="normalProbRate != null" >
        #{normalProbRate,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zstu.domain.NormalDetectInfo" >
    update normaldetectinfo
    <set >
      <if test="normalDetectRollCode != null" >
        NormalDetectRollCode = #{normalDetectRollCode,jdbcType=INTEGER},
      </if>
      <if test="normalCurDetectIP != null" >
        NormalCurDetectIP = #{normalCurDetectIP,jdbcType=INTEGER},
      </if>
      <if test="normalDetectStartTime != null" >
        NormalDetectStartTime = #{normalDetectStartTime,jdbcType=INTEGER},
      </if>
      <if test="lastNormalDetectTotalTime != null" >
        LastNormalDetectTotalTime = #{lastNormalDetectTotalTime,jdbcType=INTEGER},
      </if>
      <if test="normalProbRate != null" >
        NormalProbRate = #{normalProbRate,jdbcType=TINYINT},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zstu.domain.NormalDetectInfo" >
    update normaldetectinfo
    set NormalDetectRollCode = #{normalDetectRollCode,jdbcType=INTEGER},
      NormalCurDetectIP = #{normalCurDetectIP,jdbcType=INTEGER},
      NormalDetectStartTime = #{normalDetectStartTime,jdbcType=INTEGER},
      LastNormalDetectTotalTime = #{lastNormalDetectTotalTime,jdbcType=INTEGER},
      NormalProbRate = #{normalProbRate,jdbcType=TINYINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>